version: '3.3'

services:
  db:
    container_name: foodgram-db
    image: postgres:15.4-alpine
    environment:
      POSTGRES_DB: foodgram
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-backend
    build: ../backend
    volumes:
      - ../backend/:/app/result_build/
      - media:/app/media/
      - admin:/app/static/admin/
    environment:
      DB_HOST: db
      DB_NAME: foodgram
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media:/usr/share/nginx/html/media/
      - admin:/usr/share/nginx/html/static/admin/
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  media:
  admin: